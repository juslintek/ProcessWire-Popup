<?php

/**
 * ProcessWire 'Front Page Popup' demonstration module
 *
 * Demonstrates the Module interface and how to add hooks.
 * 
 * See README file for further links regarding module development.
 * 
 * ProcessWire 2.x 
 * Copyright (C) 2014 by Ryan Cramer 
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 * 
 * http://processwire.com
 *
 */

class FrontPagePopup extends WireData implements Module {

	/**
	 * getModuleInfo is a module required by all modules to tell ProcessWire about them
	 *
	 * @return array
	 *
	 */
	public static function getModuleInfo() {

		return array(

			// The module'ss title, typically a little more descriptive than the class name
			'title' => 'Popupo modulis',

			// version number 
			'version' => 2, 

			// summary is brief description of what this module is
			'summary' => 'Popup valdymo modulis.',
			
			// Optional URL to more information about the module
			'href' => 'http://juslintek.rf.gd',

			// singular=true: indicates that only one instance of the module is allowed.
			// This is usually what you want for modules that attach hooks. 
			'singular' => true, 

			// autoload=true: indicates the module should be started with ProcessWire.
			// This is necessary for any modules that attach runtime hooks, otherwise those
			// hooks won't get attached unless some other code calls the module on it's own.
			// Note that autoload modules are almost always also 'singular' (seen above).
			'autoload' => true, 
		
			// Optional font-awesome icon name, minus the 'fa-' part
			'icon' => 'bookmark-o',
			);
	}

	/**
	 * Initialize the module
	 *
	 * ProcessWire calls this when the module is loaded. For 'autoload' modules, this will be called
	 * when ProcessWire's API is ready. As a result, this is a good place to attach hooks. 
	 *
	 */

	public function init() {

		// add a hook after the $pages->save, to issue a notice every time a page is saved
		//$this->pages->addHookAfter('save', $this, 'example1');

		// add a hook after each page is rendered and modify the output
		$this->addHookAfter('Page::render', $this, 'popupHtml');

		// add a 'hello_world' property to every page that returns "Hello [user]"
		// use "echo $page->hello_world;" in your template file to display output
		//$this->addHookProperty('Page::hello_world', $this, 'example4');
	}

	/**
	 * Example2 hooks into every page after it's rendered and adds "Hello World" text at the bottom
	 *
	 */
	public function popupHtml($event) {
		/*if($_SERVER['REMOTE_ADDR']!=='77.240.250.250'){
			$event->return = str_replace("</body>", "</body>", $event->return);
		}*/

		if($_POST['discount_submit']==1){

			$body = <<<HTML

			Laba diena, siunčiame jums telefono numerį ir nuolaidos kodą, kurie buvo įvesti popupe.

Nuolaidos kodas: $_POST[discount_code]
Telefono numeris: $_POST[phone_number]
IP: $_SERVER[REMOTE_ADDR]
HTML;

			wireMail('example@example.com', 'popup@example.com', 'Nauja užklausa iš popupo',$body);
			wireMail('example@example.com', 'popup@example.com', 'Nauja užklausa iš popupo',$body);
			echo json_encode(array('message'=>'Jūsų užklausa išsiųsta, su jumis neužilgo susisieks'));
			exit();
		}

		$page = $event->object;
		global $config;

		// don't add this to the admin pages
		if($page->template == 'admin') return;

		ob_start();
		?>
		<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,600italic,700&subset=latin,latin-ext' rel='stylesheet' type='text/css'>
		<style>
			@import url('<?php echo $config->urls->assets ?>frontpagepopup/stylesheet.css');'
		</style>
		<script src='<?php echo $config->urls->assets ?>frontpagepopup/javascript.js' type='text/javascript'></script>
		<div id="popup_wrapper">
			<div id="popup_layer" class="group">
				<div id="popup_arrow">
					<img src="<?php echo $config->urls->assets ?>frontpagepopup/bg.jpg" alt="">
				</div>
				<div id="popup" class="group">
					<img src="<?php echo $config->urls->assets ?>frontpagepopup/bg.jpg" alt="">
					<div id="countdown">
						<h3 class="text-right">NEDELSK!</h3>
						<div class="first">
							<span class="minutes"></span>
						</div>
						<div class="second">
							<span class="seconds"></span>
						</div>
					</div>
					<div id="content">
						<div class="heading group">
							<div class="one-half">
								<h2 class="text-center">JŪS VIENAS IŠ</h2>
								<h2 class="heading-100 text-center">100</h2>
								<h2 class="text-center">LAIMINGŲJŲ</h2>
							</div>
							<div class="one-half">
								<h2 class="text-center">ĮVESKITE KODĄ</h2>
								<h2 id="discount_code_check" class="discount-code text-center">ROL16</h2>
								<h5 class="smalltext text-center">IR GAUKITE</h5>
								<h2 class="blacktext text-center">NUOLAIDĄ</h2>
							</div>
							<div class="one">
								<form id="discount_code_submission" method="post" class="group">
									<input type="hidden" name="discount_submit" value="1">
									<div class="one-half group">
										<label for="discount_code_input">Įveskite <strong>NUOLAIDOS</strong> kodą</label>
										<input id="discount_code_input" name="discount_code" value="">
									</div>
									<div class="one-half group">
										<label for="phone_number_input">Įveskite savo <strong>tel. numerį</strong></label>
										<input id="phone_number_input" name="phone_number" value="">
									</div>
									<div class="one">
										<button type="submit" id="discount_submit">GAUTI NUOLAIDĄ</button>
									</div>
								</form>
							</div>
						</div>
					</div>
					<span id="close_popup" class="close-button"></span>
					<img src="<?php echo $config->urls->assets ?>frontpagepopup/profile.png" alt="" id="profile">
				</div>
			</div>
		</div>
		<?php
		$content = ob_get_clean();
		//var_dump($event);

		// add a "Hello World" paragraph right before the closing body tag
		$event->return = str_replace("</body>", "$content</body>", $event->return);
	}
	
}
